{
  "address": "0xC71b62863269979a22C103191e0118b5C3DA6Ee6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "swapper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenOutput",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethInput",
          "type": "uint256"
        }
      ],
      "name": "EthToTokenSwap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidityMinted",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethInput",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensInput",
          "type": "uint256"
        }
      ],
      "name": "LiquidityProvided",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityRemover",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidityWithdrawn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensOutput",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethOutput",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "swapper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensInput",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethOutput",
          "type": "uint256"
        }
      ],
      "name": "TokenToEthSwap",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokensDeposited",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "getLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "inputReserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "outputReserve",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "tokenToEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidityAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc12d11af395a10fae009aa22fa979f730029be63a371eedcab5f8db04d7b4df9",
  "receipt": {
    "to": null,
    "from": "0xc03e8cf19bbCCA2FD6f9DF7Df0A4e60e0e92c7Ad",
    "contractAddress": "0xC71b62863269979a22C103191e0118b5C3DA6Ee6",
    "transactionIndex": 25,
    "gasUsed": "963558",
    "logsBloom": "0x
    "blockHash": "0x1fdb265a23d0dca8ff84a584aae8621eece4e5bfe94ba33c80286496d9b5dbe1",
    "transactionHash": "0xc12d11af395a10fae009aa22fa979f730029be63a371eedcab5f8db04d7b4df9",
    "logs": [],
    "blockNumber": 5870475,
    "cumulativeGasUsed": "6402182",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA7709e0eD7373D0bBAA8b49bB07564014366166F"
  ],
  "numDeployments": 1,
  "solcInputHash": "bd78dc3c15a7511e6ae9d6da78ca4973",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenOutput\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethInput\",\"type\":\"uint256\"}],\"name\":\"EthToTokenSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethInput\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensInput\",\"type\":\"uint256\"}],\"name\":\"LiquidityProvided\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityRemover\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensOutput\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethOutput\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensInput\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethOutput\",\"type\":\"uint256\"}],\"name\":\"TokenToEthSwap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensDeposited\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"}],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputReserve\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"tokenToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DEX.sol\":\"DEX\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/DEX.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\ncontract DEX is ReentrancyGuard {\\r\\n    IERC20 public token;\\r\\n    uint256 public totalLiquidity;\\r\\n    mapping(address => uint256) public liquidity;\\r\\n\\r\\n    event EthToTokenSwap(\\r\\n        address indexed swapper,\\r\\n        uint256 tokenOutput,\\r\\n        uint256 ethInput\\r\\n    );\\r\\n\\r\\n    event TokenToEthSwap(\\r\\n        address indexed swapper,\\r\\n        uint256 tokensInput,\\r\\n        uint256 ethOutput\\r\\n    );\\r\\n\\r\\n    event LiquidityProvided(\\r\\n        address indexed liquidityProvider,\\r\\n        uint256 liquidityMinted,\\r\\n        uint256 ethInput,\\r\\n        uint256 tokensInput\\r\\n    );\\r\\n\\r\\n    event LiquidityRemoved(\\r\\n        address indexed liquidityRemover,\\r\\n        uint256 liquidityWithdrawn,\\r\\n        uint256 tokensOutput,\\r\\n        uint256 ethOutput\\r\\n    );\\r\\n\\r\\n    constructor(address token_addr) {\\r\\n        token = IERC20(token_addr);\\r\\n    }\\r\\n\\r\\n    function init(uint256 tokens) public payable returns (uint256) {\\r\\n        require(totalLiquidity == 0, \\\"DEX: already initialized\\\");\\r\\n        require(msg.value > 0 && tokens > 0, \\\"Cannot initialize with zero\\\");\\r\\n        require(token.transferFrom(msg.sender, address(this), tokens), \\\"DEX: transfer failed\\\");\\r\\n        totalLiquidity = address(this).balance;\\r\\n        liquidity[msg.sender] = totalLiquidity;\\r\\n        emit LiquidityProvided(msg.sender, totalLiquidity, msg.value, tokens);\\r\\n        return totalLiquidity;\\r\\n    }\\r\\n\\r\\n    function getLiquidity(address lp) public view returns (uint256) {\\r\\n        return liquidity[lp];\\r\\n    }\\r\\n\\r\\n    function price(uint256 inputAmount, uint256 inputReserve, uint256 outputReserve) public pure returns (uint256) {\\r\\n        require(inputReserve > 0 && outputReserve > 0, \\\"Invalid reserves\\\");\\r\\n        uint256 inputAmountWithFee = inputAmount * 997;\\r\\n        uint256 numerator = inputAmountWithFee * outputReserve;\\r\\n        uint256 denominator = (inputReserve * 1000) + inputAmountWithFee;\\r\\n        return numerator / denominator;\\r\\n    }\\r\\n\\r\\n    function ethToToken() public payable returns (uint256) {\\r\\n        require(msg.value > 0, \\\"Must send ETH to swap\\\");\\r\\n        uint256 tokenReserve = token.balanceOf(address(this));\\r\\n        uint256 tokensBought = price(msg.value, address(this).balance - msg.value, tokenReserve);\\r\\n        require(token.transfer(msg.sender, tokensBought), \\\"DEX: failed to transfer tokens\\\");\\r\\n        emit EthToTokenSwap(msg.sender, tokensBought, msg.value);\\r\\n        return tokensBought;\\r\\n    }\\r\\n\\r\\n    function tokenToEth(uint256 tokens) public nonReentrant returns (uint256) {\\r\\n        require(tokens > 0, \\\"Must send tokens to swap\\\");\\r\\n        uint256 tokenReserve = token.balanceOf(address(this));\\r\\n        uint256 ethBought = price(tokens, tokenReserve, address(this).balance);\\r\\n        (bool sent,) = msg.sender.call{value: ethBought}(\\\"\\\");\\r\\n        require(sent, \\\"DEX: failed to send Ether\\\");\\r\\n        require(token.transferFrom(msg.sender, address(this), tokens), \\\"DEX: failed to transfer tokens\\\");\\r\\n        emit TokenToEthSwap(msg.sender, tokens, ethBought);\\r\\n        return ethBought;\\r\\n    }\\r\\n\\r\\n    function deposit() public payable returns (uint256 tokensDeposited) {\\r\\n        require(msg.value > 0, \\\"Must deposit ETH\\\");\\r\\n        uint256 ethReserve = address(this).balance - msg.value;\\r\\n        uint256 tokenReserve = token.balanceOf(address(this));\\r\\n        uint256 tokenAmount = (msg.value * tokenReserve) / ethReserve;\\r\\n        require(token.transferFrom(msg.sender, address(this), tokenAmount), \\\"Failed to transfer tokens\\\");\\r\\n\\r\\n        uint256 liquidityMinted = (msg.value * totalLiquidity) / ethReserve;\\r\\n        liquidity[msg.sender] += liquidityMinted;\\r\\n        totalLiquidity += liquidityMinted;\\r\\n\\r\\n        emit LiquidityProvided(msg.sender, liquidityMinted, msg.value, tokenAmount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    function withdraw(uint256 liquidityAmount) public nonReentrant returns (uint256 ethAmount, uint256 tokenAmount) {\\r\\n        require(liquidity[msg.sender] >= liquidityAmount, \\\"Not enough liquidity\\\");\\r\\n\\r\\n        uint256 ethReserve = address(this).balance;\\r\\n        uint256 tokenReserve = token.balanceOf(address(this));\\r\\n\\r\\n        ethAmount = (liquidityAmount * ethReserve) / totalLiquidity;\\r\\n        tokenAmount = (liquidityAmount * tokenReserve) / totalLiquidity;\\r\\n\\r\\n        liquidity[msg.sender] -= liquidityAmount;\\r\\n        totalLiquidity -= liquidityAmount;\\r\\n\\r\\n        (bool ethSent,) = msg.sender.call{value: ethAmount}(\\\"\\\");\\r\\n        require(ethSent, \\\"Failed to send ETH\\\");\\r\\n        require(token.transfer(msg.sender, tokenAmount), \\\"Failed to transfer tokens\\\");\\r\\n\\r\\n        emit LiquidityRemoved(msg.sender, liquidityAmount, ethAmount, tokenAmount);\\r\\n        return (ethAmount, tokenAmount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa0dd4fbfa2eff32b98c671bf81e5ec9d8f0c93571157e4fabe2a2716c51c19d6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161103938038061103983398101604081905261002f91610059565b6001600081905580546001600160a01b0319166001600160a01b0392909216919091179055610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b610fa1806100986000396000f3fe6080604052600436106100915760003560e01c8063a747b93b11610059578063a747b93b1461013c578063b7b0422d14610172578063b8c876b114610185578063d0e30db0146101b2578063fc0c546a146101ba57600080fd5b806315770f92146100965780632071a9f4146100bf5780632e1a7d4d146100df57806370b2a30f14610114578063789770f414610134575b600080fd5b3480156100a257600080fd5b506100ac60025481565b6040519081526020015b60405180910390f35b3480156100cb57600080fd5b506100ac6100da366004610e40565b6101f2565b3480156100eb57600080fd5b506100ff6100fa366004610e6c565b610295565b604080519283526020830191909152016100b6565b34801561012057600080fd5b506100ac61012f366004610e6c565b61057c565b6100ac610802565b34801561014857600080fd5b506100ac610157366004610e85565b6001600160a01b031660009081526003602052604090205490565b6100ac610180366004610e6c565b6109d2565b34801561019157600080fd5b506100ac6101a0366004610e85565b60036020526000908152604090205481565b6100ac610ba1565b3480156101c657600080fd5b506001546101da906001600160a01b031681565b6040516001600160a01b0390911681526020016100b6565b600080831180156102035750600082115b6102475760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b60448201526064015b60405180910390fd5b6000610255856103e5610ecb565b905060006102638483610ecb565b9050600082610274876103e8610ecb565b61027e9190610ee8565b905061028a8183610efb565b979650505050505050565b6000806102a0610de7565b336000908152600360205260409020548311156102f65760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b604482015260640161023e565b6001546040516370a0823160e01b815230600482015247916000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190610f1d565b6002549091506103778387610ecb565b6103819190610efb565b6002549094506103918287610ecb565b61039b9190610efb565b336000908152600360205260408120805492955087929091906103bf908490610f36565b9250508190555084600260008282546103d89190610f36565b9091555050604051600090339086908381818185875af1925050503d806000811461041f576040519150601f19603f3d011682016040523d82523d6000602084013e610424565b606091505b505090508061046a5760405162461bcd60e51b815260206004820152601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b604482015260640161023e565b60015460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df9190610f49565b6105275760405162461bcd60e51b81526020600482015260196024820152784661696c656420746f207472616e7366657220746f6b656e7360381b604482015260640161023e565b604080518781526020810187905290810185905233907f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d9060600160405180910390a25050506105776001600055565b915091565b6000610586610de7565b600082116105d65760405162461bcd60e51b815260206004820152601860248201527f4d7573742073656e6420746f6b656e7320746f20737761700000000000000000604482015260640161023e565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190610f1d565b905060006106528483476101f2565b604051909150600090339083908381818185875af1925050503d8060008114610697576040519150601f19603f3d011682016040523d82523d6000602084013e61069c565b606091505b50509050806106ed5760405162461bcd60e51b815260206004820152601960248201527f4445583a206661696c656420746f2073656e6420457468657200000000000000604482015260640161023e565b6001546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190610f49565b6107b45760405162461bcd60e51b815260206004820152601e60248201527f4445583a206661696c656420746f207472616e7366657220746f6b656e730000604482015260640161023e565b604080518681526020810184905233917f472303b1e7ca7d00fb77f255c0a8c577f9ca4264c0306aaed3ff18e831523a6d910160405180910390a2509150506107fd6001600055565b919050565b600080341161084b5760405162461bcd60e51b815260206004820152601560248201527404d7573742073656e642045544820746f207377617605c1b604482015260640161023e565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b89190610f1d565b905060006108d0346108ca8147610f36565b846101f2565b60015460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610922573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109469190610f49565b6109925760405162461bcd60e51b815260206004820152601e60248201527f4445583a206661696c656420746f207472616e7366657220746f6b656e730000604482015260640161023e565b6040805182815234602082015233917f6d4870e9281c01ea54a4420c8684ac713b77f0c590b40c4b1fbf4c6ba892ccea910160405180910390a292915050565b6000600254600014610a265760405162461bcd60e51b815260206004820152601860248201527f4445583a20616c726561647920696e697469616c697a65640000000000000000604482015260640161023e565b600034118015610a365750600082115b610a825760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420696e697469616c697a652077697468207a65726f0000000000604482015260640161023e565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd9190610f49565b610b405760405162461bcd60e51b81526020600482015260146024820152731111560e881d1c985b9cd9995c8819985a5b195960621b604482015260640161023e565b47600281905533600081815260036020908152604091829020849055815193845234908401528201849052907f3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f5009060600160405180910390a2505060025490565b6000803411610be55760405162461bcd60e51b815260206004820152601060248201526f09aeae6e840c8cae0dee6d2e8408aa8960831b604482015260640161023e565b6000610bf13447610f36565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c639190610f1d565b9050600082610c728334610ecb565b610c7c9190610efb565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf89190610f49565b610d405760405162461bcd60e51b81526020600482015260196024820152784661696c656420746f207472616e7366657220746f6b656e7360381b604482015260640161023e565b60008360025434610d519190610ecb565b610d5b9190610efb565b33600090815260036020526040812080549293508392909190610d7f908490610ee8565b925050819055508060026000828254610d989190610ee8565b90915550506040805182815234602082015290810183905233907f3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f5009060600160405180910390a2509392505050565b600260005403610e395760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161023e565b6002600055565b600080600060608486031215610e5557600080fd5b505081359360208301359350604090920135919050565b600060208284031215610e7e57600080fd5b5035919050565b600060208284031215610e9757600080fd5b81356001600160a01b0381168114610eae57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ee257610ee2610eb5565b92915050565b80820180821115610ee257610ee2610eb5565b600082610f1857634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610f2f57600080fd5b5051919050565b81810381811115610ee257610ee2610eb5565b600060208284031215610f5b57600080fd5b81518015158114610eae57600080fdfea2646970667358221220413307fbd97f1f7064c4ee7db2e0edd9c7144ae089c048020ecf8f2a74c3679564736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c8063a747b93b11610059578063a747b93b1461013c578063b7b0422d14610172578063b8c876b114610185578063d0e30db0146101b2578063fc0c546a146101ba57600080fd5b806315770f92146100965780632071a9f4146100bf5780632e1a7d4d146100df57806370b2a30f14610114578063789770f414610134575b600080fd5b3480156100a257600080fd5b506100ac60025481565b6040519081526020015b60405180910390f35b3480156100cb57600080fd5b506100ac6100da366004610e40565b6101f2565b3480156100eb57600080fd5b506100ff6100fa366004610e6c565b610295565b604080519283526020830191909152016100b6565b34801561012057600080fd5b506100ac61012f366004610e6c565b61057c565b6100ac610802565b34801561014857600080fd5b506100ac610157366004610e85565b6001600160a01b031660009081526003602052604090205490565b6100ac610180366004610e6c565b6109d2565b34801561019157600080fd5b506100ac6101a0366004610e85565b60036020526000908152604090205481565b6100ac610ba1565b3480156101c657600080fd5b506001546101da906001600160a01b031681565b6040516001600160a01b0390911681526020016100b6565b600080831180156102035750600082115b6102475760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b60448201526064015b60405180910390fd5b6000610255856103e5610ecb565b905060006102638483610ecb565b9050600082610274876103e8610ecb565b61027e9190610ee8565b905061028a8183610efb565b979650505050505050565b6000806102a0610de7565b336000908152600360205260409020548311156102f65760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b604482015260640161023e565b6001546040516370a0823160e01b815230600482015247916000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190610f1d565b6002549091506103778387610ecb565b6103819190610efb565b6002549094506103918287610ecb565b61039b9190610efb565b336000908152600360205260408120805492955087929091906103bf908490610f36565b9250508190555084600260008282546103d89190610f36565b9091555050604051600090339086908381818185875af1925050503d806000811461041f576040519150601f19603f3d011682016040523d82523d6000602084013e610424565b606091505b505090508061046a5760405162461bcd60e51b815260206004820152601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b604482015260640161023e565b60015460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df9190610f49565b6105275760405162461bcd60e51b81526020600482015260196024820152784661696c656420746f207472616e7366657220746f6b656e7360381b604482015260640161023e565b604080518781526020810187905290810185905233907f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d9060600160405180910390a25050506105776001600055565b915091565b6000610586610de7565b600082116105d65760405162461bcd60e51b815260206004820152601860248201527f4d7573742073656e6420746f6b656e7320746f20737761700000000000000000604482015260640161023e565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190610f1d565b905060006106528483476101f2565b604051909150600090339083908381818185875af1925050503d8060008114610697576040519150601f19603f3d011682016040523d82523d6000602084013e61069c565b606091505b50509050806106ed5760405162461bcd60e51b815260206004820152601960248201527f4445583a206661696c656420746f2073656e6420457468657200000000000000604482015260640161023e565b6001546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190610f49565b6107b45760405162461bcd60e51b815260206004820152601e60248201527f4445583a206661696c656420746f207472616e7366657220746f6b656e730000604482015260640161023e565b604080518681526020810184905233917f472303b1e7ca7d00fb77f255c0a8c577f9ca4264c0306aaed3ff18e831523a6d910160405180910390a2509150506107fd6001600055565b919050565b600080341161084b5760405162461bcd60e51b815260206004820152601560248201527404d7573742073656e642045544820746f207377617605c1b604482015260640161023e565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b89190610f1d565b905060006108d0346108ca8147610f36565b846101f2565b60015460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610922573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109469190610f49565b6109925760405162461bcd60e51b815260206004820152601e60248201527f4445583a206661696c656420746f207472616e7366657220746f6b656e730000604482015260640161023e565b6040805182815234602082015233917f6d4870e9281c01ea54a4420c8684ac713b77f0c590b40c4b1fbf4c6ba892ccea910160405180910390a292915050565b6000600254600014610a265760405162461bcd60e51b815260206004820152601860248201527f4445583a20616c726561647920696e697469616c697a65640000000000000000604482015260640161023e565b600034118015610a365750600082115b610a825760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420696e697469616c697a652077697468207a65726f0000000000604482015260640161023e565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd9190610f49565b610b405760405162461bcd60e51b81526020600482015260146024820152731111560e881d1c985b9cd9995c8819985a5b195960621b604482015260640161023e565b47600281905533600081815260036020908152604091829020849055815193845234908401528201849052907f3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f5009060600160405180910390a2505060025490565b6000803411610be55760405162461bcd60e51b815260206004820152601060248201526f09aeae6e840c8cae0dee6d2e8408aa8960831b604482015260640161023e565b6000610bf13447610f36565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c639190610f1d565b9050600082610c728334610ecb565b610c7c9190610efb565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf89190610f49565b610d405760405162461bcd60e51b81526020600482015260196024820152784661696c656420746f207472616e7366657220746f6b656e7360381b604482015260640161023e565b60008360025434610d519190610ecb565b610d5b9190610efb565b33600090815260036020526040812080549293508392909190610d7f908490610ee8565b925050819055508060026000828254610d989190610ee8565b90915550506040805182815234602082015290810183905233907f3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f5009060600160405180910390a2509392505050565b600260005403610e395760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161023e565b6002600055565b600080600060608486031215610e5557600080fd5b505081359360208301359350604090920135919050565b600060208284031215610e7e57600080fd5b5035919050565b600060208284031215610e9757600080fd5b81356001600160a01b0381168114610eae57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ee257610ee2610eb5565b92915050565b80820180821115610ee257610ee2610eb5565b600082610f1857634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610f2f57600080fd5b5051919050565b81810381811115610ee257610ee2610eb5565b600060208284031215610f5b57600080fd5b81518015158114610eae57600080fdfea2646970667358221220413307fbd97f1f7064c4ee7db2e0edd9c7144ae089c048020ecf8f2a74c3679564736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/DEX.sol:DEX",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 140,
        "contract": "contracts/DEX.sol:DEX",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)131"
      },
      {
        "astId": 142,
        "contract": "contracts/DEX.sol:DEX",
        "label": "totalLiquidity",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 146,
        "contract": "contracts/DEX.sol:DEX",
        "label": "liquidity",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)131": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}